name: Run Tests (INTERNAL)

on:
    workflow_call:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
    build-test:
        strategy:
            matrix:
                python-version: [3.11]
                platform:
                  - { runner: ubuntu-latest, python_exec: ".venv/bin/python" }
        runs-on: ${{ matrix.platform.runner }}
        steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v5
          id: setup_python
          with:
            python-version: ${{ matrix.python-version }}
            cache: 'pip'

        - run: rustup toolchain install stable --profile minimal
        - name: Rust Cache
          uses: Swatinem/rust-cache@v2
          with:
            key: rust-${{ matrix.platform.runner }}-${{ matrix.python-version }}
        - name: Rust tests
          run: cargo test --verbose

        - uses: actions/cache@v4
          with:
            path: .venv
            key: pyenv-${{ matrix.platform.runner }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
            restore-keys: |
              pyenv-${{ matrix.platform.runner }}-${{ steps.setup_python.outputs.python-version }}-

        - name: Setup venv
          run: |
            python -m venv .venv
        - name: Install Python toolchains
          run: |
            ${{ matrix.platform.python_exec }} -m pip install maturin mypy pytest pytest-asyncio
        - name: Python build
          run: |
            ${{ matrix.platform.python_exec }} -m maturin develop -E all
        - name: Python type check (mypy)
          run: |
            ${{ matrix.platform.python_exec }} -m mypy examples --explicit-package-bases
        - name: Python tests
          run: |
            ${{ matrix.platform.python_exec }} -m pytest --capture=no python/cocoindex/tests
